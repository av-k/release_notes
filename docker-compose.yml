version: "3"
services:
  api:
    container_name: admin_notes_api
    build:
      context: ./api
      dockerfile: Dockerfile${DOCKER_FILE_ENV}
    volumes:
      - "./api/src:/app/src"
    environment:
      NODE_ENV: ${NODE_ENV}
      VERSION: ${API_VERSION}
      HOST: ${API_HOST}
      PORT: ${API_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DB: ${DB_NAME}
#    ports:
#      - ${API_PORT}:${API_PORT}
    expose:
      - ${API_PORT}
    depends_on:
      - postgres
#  web:
#    build:
#      context: ./web
#      dockerfile: Dockerfile.dev
#    restart: always
#    volumes:
#      - "./web/src:/app/src"
#    environment:
#      NODE_ENV: ${NODE_ENV}
#      API_VERSION: ${API_VERSION}
#      API_HOST: ${API_HOST}
#      API_PORT: ${API_PORT}
#    ports:
#      - ${WEB_PORT}:${WEB_PORT}
#    depends_on:
#      - api
  postgres:
    container_name: admin_notes_db
    image: postgres:10.7-alpine
    restart: always
    environment:
      COMPOSE_HTTP_TIMEOUT: 200000
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
    - ${DB_PORT}:${DB_PORT}
#    expose:
#      - ${DB_PORT}
